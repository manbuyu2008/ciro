<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cc.water.ciro.eval.mapper.EvalSelfEnumDao" >
  <resultMap id="BaseResultMap" type="cc.water.ciro.eval.domain.EvalSelfEnum" >
    <id column="ID" property="id" jdbcType="BIGINT" />
    <result column="PARENT_ID" property="parentId" jdbcType="VARCHAR" />
    <result column="EVENT_DATE" property="eventDate" jdbcType="VARCHAR" />
    <result column="CONTENT" property="content" jdbcType="VARCHAR" />
    <result column="XS" property="xs" jdbcType="VARCHAR" />
    <result column="JB" property="jb" jdbcType="VARCHAR" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
    <result column="update_date" property="updateDate" jdbcType="TIMESTAMP" />
    <result column="CREATER" property="creater" jdbcType="BIGINT" />
    <result column="MENDER" property="mender" jdbcType="BIGINT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    ID, PARENT_ID, EVENT_DATE, CONTENT, XS, JB, create_date, update_date, CREATER, MENDER
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cc.water.ciro.eval.domain.EvalSelfEnumExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tbl_eval_self_enum
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limit != null" >
      <if test="offset != null" >
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null" >
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select
    <include refid="Base_Column_List" />
    from tbl_eval_self_enum
    where ID = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from tbl_eval_self_enum
    where ID = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="cc.water.ciro.eval.domain.EvalSelfEnumExample" >
    delete from tbl_eval_self_enum
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cc.water.ciro.eval.domain.EvalSelfEnum" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into tbl_eval_self_enum (ID, PARENT_ID, EVENT_DATE,
    CONTENT, XS, JB, create_date,
    update_date, CREATER, MENDER
    )
    values (#{id,jdbcType=BIGINT}, #{parentId,jdbcType=VARCHAR}, #{eventDate,jdbcType=VARCHAR},
    #{content,jdbcType=VARCHAR}, #{xs,jdbcType=VARCHAR}, #{jb,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP},
    #{updateDate,jdbcType=TIMESTAMP}, #{creater,jdbcType=BIGINT}, #{mender,jdbcType=BIGINT}
    )
  </insert>
  <insert id="insertSelective" parameterType="cc.water.ciro.eval.domain.EvalSelfEnum" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into tbl_eval_self_enum
    <trim prefix="(" suffix=")" suffixOverrides="," >
      ID,
      <if test="parentId != null" >
        PARENT_ID,
      </if>
      <if test="eventDate != null" >
        EVENT_DATE,
      </if>
      <if test="content != null" >
        CONTENT,
      </if>
      <if test="xs != null" >
        XS,
      </if>
      <if test="jb != null" >
        JB,
      </if>
      <if test="createDate != null" >
        create_date,
      </if>
      <if test="updateDate != null" >
        update_date,
      </if>
      <if test="creater != null" >
        CREATER,
      </if>
      <if test="mender != null" >
        MENDER,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      #{id,jdbcType=BIGINT},
      <if test="parentId != null" >
        #{parentId,jdbcType=VARCHAR},
      </if>
      <if test="eventDate != null" >
        #{eventDate,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="xs != null" >
        #{xs,jdbcType=VARCHAR},
      </if>
      <if test="jb != null" >
        #{jb,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null" >
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="creater != null" >
        #{creater,jdbcType=BIGINT},
      </if>
      <if test="mender != null" >
        #{mender,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cc.water.ciro.eval.domain.EvalSelfEnumExample" resultType="java.lang.Integer" >
    select count(*) from tbl_eval_self_enum
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update tbl_eval_self_enum
    <set >
      <if test="record.id != null" >
        ID = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.parentId != null" >
        PARENT_ID = #{record.parentId,jdbcType=VARCHAR},
      </if>
      <if test="record.eventDate != null" >
        EVENT_DATE = #{record.eventDate,jdbcType=VARCHAR},
      </if>
      <if test="record.content != null" >
        CONTENT = #{record.content,jdbcType=VARCHAR},
      </if>
      <if test="record.xs != null" >
        XS = #{record.xs,jdbcType=VARCHAR},
      </if>
      <if test="record.jb != null" >
        JB = #{record.jb,jdbcType=VARCHAR},
      </if>
      <if test="record.createDate != null" >
        create_date = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateDate != null" >
        update_date = #{record.updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.creater != null" >
        CREATER = #{record.creater,jdbcType=BIGINT},
      </if>
      <if test="record.mender != null" >
        MENDER = #{record.mender,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update tbl_eval_self_enum
    set ID = #{record.id,jdbcType=BIGINT},
    PARENT_ID = #{record.parentId,jdbcType=VARCHAR},
    EVENT_DATE = #{record.eventDate,jdbcType=VARCHAR},
    CONTENT = #{record.content,jdbcType=VARCHAR},
    XS = #{record.xs,jdbcType=VARCHAR},
    JB = #{record.jb,jdbcType=VARCHAR},
    create_date = #{record.createDate,jdbcType=TIMESTAMP},
    update_date = #{record.updateDate,jdbcType=TIMESTAMP},
    CREATER = #{record.creater,jdbcType=BIGINT},
    MENDER = #{record.mender,jdbcType=BIGINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cc.water.ciro.eval.domain.EvalSelfEnum" >
    update tbl_eval_self_enum
    <set >
      <if test="parentId != null" >
        PARENT_ID = #{parentId,jdbcType=VARCHAR},
      </if>
      <if test="eventDate != null" >
        EVENT_DATE = #{eventDate,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        CONTENT = #{content,jdbcType=VARCHAR},
      </if>
      <if test="xs != null" >
        XS = #{xs,jdbcType=VARCHAR},
      </if>
      <if test="jb != null" >
        JB = #{jb,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null" >
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="creater != null" >
        CREATER = #{creater,jdbcType=BIGINT},
      </if>
      <if test="mender != null" >
        MENDER = #{mender,jdbcType=BIGINT},
      </if>
    </set>
    where ID = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cc.water.ciro.eval.domain.EvalSelfEnum" >
    update tbl_eval_self_enum
    set PARENT_ID = #{parentId,jdbcType=VARCHAR},
      EVENT_DATE = #{eventDate,jdbcType=VARCHAR},
      CONTENT = #{content,jdbcType=VARCHAR},
      XS = #{xs,jdbcType=VARCHAR},
      JB = #{jb,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      update_date = #{updateDate,jdbcType=TIMESTAMP},
      CREATER = #{creater,jdbcType=BIGINT},
      MENDER = #{mender,jdbcType=BIGINT}
    where ID = #{id,jdbcType=BIGINT}
  </update>

  <insert id="insertBatch"  parameterType="java.util.List">
    insert into tbl_eval_self_enum (ID, PARENT_ID, EVENT_DATE,
    CONTENT, XS, JB, create_date,
    update_date, CREATER, MENDER
    )
    values
    <foreach collection="list"  item="item" index="index" separator=",">
    (#{item.id,jdbcType=BIGINT}, #{item.parentId,jdbcType=VARCHAR}, #{item.eventDate,jdbcType=VARCHAR},
    #{item.content,jdbcType=VARCHAR}, #{item.xs,jdbcType=VARCHAR}, #{item.jb,jdbcType=VARCHAR}, #{item.createDate,jdbcType=TIMESTAMP},
    #{item.updateDate,jdbcType=TIMESTAMP}, #{item.creater,jdbcType=BIGINT}, #{item.mender,jdbcType=BIGINT}
    )
    </foreach>
    <selectKey resultType="java.lang.Integer" order="AFTER" keyProperty="id">
      select LAST_INSERT_ID();
    </selectKey>
  </insert>

  <update id="updateBatch"  parameterType="java.util.List">

    <foreach collection="list" item="item" index="index" open="" close="" separator=";">
      update tbl_eval_self_enum
      set PARENT_ID = #{item.parentId,jdbcType=VARCHAR},
      EVENT_DATE = #{item.eventDate,jdbcType=VARCHAR},
      CONTENT = #{item.content,jdbcType=VARCHAR},
      XS = #{item.xs,jdbcType=VARCHAR},
      JB = #{item.jb,jdbcType=VARCHAR},
      MENDER = #{item.mender,jdbcType=BIGINT}
      where ID = #{item.id,jdbcType=BIGINT}
    </foreach>

  </update>

</mapper>