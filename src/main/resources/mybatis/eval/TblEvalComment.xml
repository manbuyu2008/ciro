<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cc.water.ciro.eval.mapper.EvalCommentDao" >
  <resultMap id="BaseResultMap" type="cc.water.ciro.eval.domain.EvalComment" >
    <id column="ID" property="id" jdbcType="BIGINT" />
    <result column="NAME" property="name" jdbcType="VARCHAR" />
    <result column="COMMENT" property="comment" jdbcType="VARCHAR" />
    <result column="DID" property="did" jdbcType="VARCHAR" />
    <result column="STATUS" property="status" jdbcType="VARCHAR" />
    <result column="ADD_TIME" property="addTime" jdbcType="TIMESTAMP" />
    <result column="UPDATE_TIME" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="CREATER" property="creater" jdbcType="BIGINT" />
    <result column="MENDER" property="mender" jdbcType="BIGINT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    ID, NAME, COMMENT, DID, STATUS, ADD_TIME, UPDATE_TIME, CREATER, MENDER
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cc.water.ciro.eval.domain.EvalCommentExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tbl_eval_comment
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limit != null" >
      <if test="offset != null" >
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null" >
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from tbl_eval_comment
    where ID = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from tbl_eval_comment
    where ID = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="cc.water.ciro.eval.domain.EvalCommentExample" >
    delete from tbl_eval_comment
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cc.water.ciro.eval.domain.EvalComment" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into tbl_eval_comment (ID, NAME, COMMENT, 
      DID, STATUS, ADD_TIME, 
      UPDATE_TIME, CREATER, MENDER
      )
    values (#{id,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{comment,jdbcType=VARCHAR}, 
      #{did,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR}, #{addTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{creater,jdbcType=BIGINT}, #{mender,jdbcType=BIGINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="cc.water.ciro.eval.domain.EvalComment" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into tbl_eval_comment
    <trim prefix="(" suffix=")" suffixOverrides="," >
      ID,
      <if test="name != null" >
        NAME,
      </if>
      <if test="comment != null" >
        COMMENT,
      </if>
      <if test="did != null" >
        DID,
      </if>
      <if test="status != null" >
        STATUS,
      </if>
      <if test="addTime != null" >
        ADD_TIME,
      </if>
      <if test="updateTime != null" >
        UPDATE_TIME,
      </if>
      <if test="creater != null" >
        CREATER,
      </if>
      <if test="mender != null" >
        MENDER,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      #{id,jdbcType=BIGINT},
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="comment != null" >
        #{comment,jdbcType=VARCHAR},
      </if>
      <if test="did != null" >
        #{did,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="addTime != null" >
        #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="creater != null" >
        #{creater,jdbcType=BIGINT},
      </if>
      <if test="mender != null" >
        #{mender,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cc.water.ciro.eval.domain.EvalCommentExample" resultType="java.lang.Integer" >
    select count(*) from tbl_eval_comment
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update tbl_eval_comment
    <set >
      <if test="record.id != null" >
        ID = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.name != null" >
        NAME = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.comment != null" >
        COMMENT = #{record.comment,jdbcType=VARCHAR},
      </if>
      <if test="record.did != null" >
        DID = #{record.did,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        STATUS = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.addTime != null" >
        ADD_TIME = #{record.addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null" >
        UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.creater != null" >
        CREATER = #{record.creater,jdbcType=BIGINT},
      </if>
      <if test="record.mender != null" >
        MENDER = #{record.mender,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update tbl_eval_comment
    set ID = #{record.id,jdbcType=BIGINT},
      NAME = #{record.name,jdbcType=VARCHAR},
      COMMENT = #{record.comment,jdbcType=VARCHAR},
      DID = #{record.did,jdbcType=VARCHAR},
      STATUS = #{record.status,jdbcType=VARCHAR},
      ADD_TIME = #{record.addTime,jdbcType=TIMESTAMP},
      UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP},
      CREATER = #{record.creater,jdbcType=BIGINT},
      MENDER = #{record.mender,jdbcType=BIGINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cc.water.ciro.eval.domain.EvalComment" >
    update tbl_eval_comment
    <set >
      <if test="name != null" >
        NAME = #{name,jdbcType=VARCHAR},
      </if>
      <if test="comment != null" >
        COMMENT = #{comment,jdbcType=VARCHAR},
      </if>
      <if test="did != null" >
        DID = #{did,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        STATUS = #{status,jdbcType=VARCHAR},
      </if>
      <if test="addTime != null" >
        ADD_TIME = #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="creater != null" >
        CREATER = #{creater,jdbcType=BIGINT},
      </if>
      <if test="mender != null" >
        MENDER = #{mender,jdbcType=BIGINT},
      </if>
    </set>
    where ID = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cc.water.ciro.eval.domain.EvalComment" >
    update tbl_eval_comment
    set NAME = #{name,jdbcType=VARCHAR},
      COMMENT = #{comment,jdbcType=VARCHAR},
      DID = #{did,jdbcType=VARCHAR},
      STATUS = #{status,jdbcType=VARCHAR},
      ADD_TIME = #{addTime,jdbcType=TIMESTAMP},
      UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      CREATER = #{creater,jdbcType=BIGINT},
      MENDER = #{mender,jdbcType=BIGINT}
    where ID = #{id,jdbcType=BIGINT}
  </update>


  <select id="findRowNo" parameterType="EvalCommentQuery" resultType="Integer">
    SELECT TT.rownum FROM (
    SELECT @rownum:=@rownum+1 rownum, id FROM
    (SELECT @rownum:=0,u.id FROM tbl_eval_comment U WHERE 1=1
    <trim  suffixOverrides="AND | OR">
      <if test="did != null and did !='' ">
        AND U.did = #{did}
      </if>
      <if test="status != null and status !=''">
        AND U.status = #{status}
      </if>
      <if test="_sql != null and _sql !=''">
        ${_sql}
      </if>
      <if test="strOrder != null and strOrder !=''">
        ORDER BY ${strOrder}
      </if>
      <if test="strOrder == null || strOrder ==''">
        ORDER BY U.name,U.id
      </if>
      ) XXX_T
      ) TT WHERE 1=1
      <if test="id != null and id !=''">
        and  TT.id=#{id}
      </if>
      <if test="ids != null ">
        AND id in
        <foreach collection="ids" item="i_id" index="i_num"  open="(" separator="," close=")">
          #{i_id}
        </foreach>
      </if>
      limit 1
    </trim>
  </select>

  <select id="findListNum" parameterType="EvalCommentQuery" resultType="Integer">
    select count(1) num from tbl_eval_comment U
    WHERE 1=1
    <trim suffixOverrides="AND | OR">
      <if test="ids != null ">
        AND U.id in
        <foreach collection="ids" item="i_id" index="i_num" open="(" separator="," close=")">
          #{i_id}
        </foreach>
      </if>
      <if test="did != null and did !='' ">
        AND U.did = #{did}
      </if>
      <if test="status != null and status !=''">
        AND U.status = #{status}
      </if>
      <if test="_sql != null and _sql !=''">
        ${_sql}
      </if>
      <if test="_list != null">
        <foreach collection="_list" item="listMap" index="i_num" open="and (" separator=" OR " close=" ) ">
          (upper(F_PINYIN(u.${listMap.text})) like CONCAT('%',#{listMap.value},'%')
          or upper(u.${listMap.text}) like CONCAT('%',#{listMap.value},'%'))
        </foreach>
      </if>
      <if test="strOrder != null and strOrder !=''">
        ORDER BY ${strOrder}
      </if>
      <if test="strOrder == null || strOrder ==''">
        ORDER BY U.name,U.id
      </if>
    </trim>
  </select>

  <select id="findList" parameterType="EvalCommentQuery" resultMap="BaseResultMap">
    select U.* from tbl_eval_comment U
    WHERE 1=1
    <trim suffixOverrides="AND | OR">
      <if test="ids != null ">
        AND U.id in
        <foreach collection="ids" item="i_id" index="i_num" open="(" separator="," close=")">
          #{i_id}
        </foreach>
      </if>
      <if test="did != null and did !='' ">
        AND U.did = #{did}
      </if>
      <if test="status != null and status !=''">
        AND U.status = #{status}
      </if>
      <if test="_sql != null and _sql !=''">
        ${_sql}
      </if>
      <if test="_list != null">
        <foreach collection="_list" item="listMap" index="i_num" open="and (" separator=" OR " close=" ) ">
          (upper(F_PINYIN(u.${listMap.text})) like CONCAT('%',#{listMap.value},'%')
          or upper(u.${listMap.text}) like CONCAT('%',#{listMap.value},'%'))
        </foreach>
      </if>
      <if test="strOrder != null and strOrder !=''">
        ORDER BY ${strOrder}
      </if>
      <if test="strOrder == null || strOrder ==''">
        ORDER BY U.name,U.id
      </if>
      <if test="pageSize != null and pageSize !='' ">
        <if test="startRow != null">
          limit ${startRow}, ${pageSize}
        </if>
        <if test="startRow == null">
          limit ${pageSize}
        </if>
      </if>
    </trim>
  </select>
  
  
</mapper>